{"ast":null,"code":"var _jsxFileName = \"C:\\\\NRKIM_WORKSPACE\\\\THE_GYM\\\\frontend\\\\app\\\\src\\\\components\\\\MapComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapComponent = () => {\n  _s();\n  useEffect(() => {\n    let map = null;\n    const initMap = (lat, lng) => {\n      const {\n        naver\n      } = window;\n      if (!naver) return;\n      map = new naver.maps.Map('map', {\n        //  center: new naver.maps.LatLng(37.5665, 126.9780), //  강제 고정\n        center: new naver.maps.LatLng(lat, lng),\n        // 사용자의 현재 위치\n        zoom: 15\n      });\n\n      //  마커 추가\n      new naver.maps.Marker({\n        //  position: new naver.maps.LatLng(37.5665, 126.9780),\n        position: new naver.maps.LatLng(lat, lng),\n        map\n      });\n    };\n    const getCurrentPosition = () => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          const userLat = position.coords.latitude;\n          const userLng = position.coords.longitude;\n          alert(`✅ 위치 정보 가져오기 성공: \\n위도: ${userLat} \\n경도: ${userLng}`);\n          initMap(userLat, userLng); // 가져온 위치를 지도 초기값으로 설정\n        }, error => {\n          console.error(\"Geolocation Error: \", error);\n          // 기본 좌표(서울)로 지도 로드\n          initMap(37.5665, 126.9780);\n        }, {\n          enableHighAccuracy: true,\n          timeout: 10000,\n          maximumAge: 0\n        });\n      } else {\n        console.error(\"Geolocation is not supported by this browser.\");\n        initMap(37.5665, 126.9780); // 기본 좌표(서울)로 지도 로드\n      }\n    };\n\n    // 네이버 지도 스크립트 로드\n    const script = document.createElement('script');\n    script.src = `https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=${process.env.REACT_APP_NAVER_MAP_CLIENT_ID}`;\n    script.async = true;\n    script.onload = getCurrentPosition;\n    document.head.appendChild(script);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      width: '100%',\n      height: '400px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 12\n  }, this);\n};\n_s(MapComponent, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","MapComponent","_s","map","initMap","lat","lng","naver","window","maps","Map","center","LatLng","zoom","Marker","position","getCurrentPosition","navigator","geolocation","userLat","coords","latitude","userLng","longitude","alert","error","console","enableHighAccuracy","timeout","maximumAge","script","document","createElement","src","process","env","REACT_APP_NAVER_MAP_CLIENT_ID","async","onload","head","appendChild","id","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/NRKIM_WORKSPACE/THE_GYM/frontend/app/src/components/MapComponent.jsx"],"sourcesContent":["import React, {useEffect} from \"react\";\r\n\r\nconst MapComponent = () => {\r\n    useEffect(() => {\r\n        let map = null;\r\n\r\n        const initMap = (lat, lng) => {\r\n            const { naver } = window;\r\n            if (!naver) return;\r\n\r\n            map = new naver.maps.Map('map', {\r\n                //  center: new naver.maps.LatLng(37.5665, 126.9780), //  강제 고정\r\n                center: new naver.maps.LatLng(lat, lng), // 사용자의 현재 위치\r\n                zoom: 15,\r\n            });\r\n\r\n            //  마커 추가\r\n            new naver.maps.Marker({\r\n                //  position: new naver.maps.LatLng(37.5665, 126.9780),\r\n                position: new naver.maps.LatLng(lat, lng),\r\n                map\r\n            });\r\n        };\r\n\r\n        const getCurrentPosition = () => {\r\n            if (navigator.geolocation) {\r\n                navigator.geolocation.getCurrentPosition(\r\n                    (position) => {\r\n                        const userLat = position.coords.latitude;\r\n                        const userLng = position.coords.longitude;\r\n                        alert(`✅ 위치 정보 가져오기 성공: \\n위도: ${userLat} \\n경도: ${userLng}`);\r\n                        initMap(userLat, userLng); // 가져온 위치를 지도 초기값으로 설정\r\n                    },\r\n                    (error) => {\r\n                        console.error(\"Geolocation Error: \", error);\r\n                        // 기본 좌표(서울)로 지도 로드\r\n                        initMap(37.5665, 126.9780);\r\n                    },{\r\n                        enableHighAccuracy: true,\r\n                        timeout: 10000,\r\n                        maximumAge: 0\r\n                    }\r\n                );\r\n            } else {\r\n                console.error(\"Geolocation is not supported by this browser.\");\r\n                initMap(37.5665, 126.9780); // 기본 좌표(서울)로 지도 로드\r\n            }\r\n        };\r\n\r\n        // 네이버 지도 스크립트 로드\r\n        const script = document.createElement('script');\r\n        script.src = `https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=${process.env.REACT_APP_NAVER_MAP_CLIENT_ID}`;\r\n        script.async = true;\r\n        script.onload = getCurrentPosition;\r\n        document.head.appendChild(script);\r\n    }, []);\r\n\r\n    return <div id=\"map\" style={{ width: '100%', height: '400px' }} />;\r\n}\r\n\r\nexport default MapComponent;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvBJ,SAAS,CAAC,MAAM;IACZ,IAAIK,GAAG,GAAG,IAAI;IAEd,MAAMC,OAAO,GAAGA,CAACC,GAAG,EAAEC,GAAG,KAAK;MAC1B,MAAM;QAAEC;MAAM,CAAC,GAAGC,MAAM;MACxB,IAAI,CAACD,KAAK,EAAE;MAEZJ,GAAG,GAAG,IAAII,KAAK,CAACE,IAAI,CAACC,GAAG,CAAC,KAAK,EAAE;QAC5B;QACAC,MAAM,EAAE,IAAIJ,KAAK,CAACE,IAAI,CAACG,MAAM,CAACP,GAAG,EAAEC,GAAG,CAAC;QAAE;QACzCO,IAAI,EAAE;MACV,CAAC,CAAC;;MAEF;MACA,IAAIN,KAAK,CAACE,IAAI,CAACK,MAAM,CAAC;QAClB;QACAC,QAAQ,EAAE,IAAIR,KAAK,CAACE,IAAI,CAACG,MAAM,CAACP,GAAG,EAAEC,GAAG,CAAC;QACzCH;MACJ,CAAC,CAAC;IACN,CAAC;IAED,MAAMa,kBAAkB,GAAGA,CAAA,KAAM;MAC7B,IAAIC,SAAS,CAACC,WAAW,EAAE;QACvBD,SAAS,CAACC,WAAW,CAACF,kBAAkB,CACnCD,QAAQ,IAAK;UACV,MAAMI,OAAO,GAAGJ,QAAQ,CAACK,MAAM,CAACC,QAAQ;UACxC,MAAMC,OAAO,GAAGP,QAAQ,CAACK,MAAM,CAACG,SAAS;UACzCC,KAAK,CAAC,0BAA0BL,OAAO,UAAUG,OAAO,EAAE,CAAC;UAC3DlB,OAAO,CAACe,OAAO,EAAEG,OAAO,CAAC,CAAC,CAAC;QAC/B,CAAC,EACAG,KAAK,IAAK;UACPC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;UAC3C;UACArB,OAAO,CAAC,OAAO,EAAE,QAAQ,CAAC;QAC9B,CAAC,EAAC;UACEuB,kBAAkB,EAAE,IAAI;UACxBC,OAAO,EAAE,KAAK;UACdC,UAAU,EAAE;QAChB,CACJ,CAAC;MACL,CAAC,MAAM;QACHH,OAAO,CAACD,KAAK,CAAC,+CAA+C,CAAC;QAC9DrB,OAAO,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC;MAChC;IACJ,CAAC;;IAED;IACA,MAAM0B,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC/CF,MAAM,CAACG,GAAG,GAAG,gEAAgEC,OAAO,CAACC,GAAG,CAACC,6BAA6B,EAAE;IACxHN,MAAM,CAACO,KAAK,GAAG,IAAI;IACnBP,MAAM,CAACQ,MAAM,GAAGtB,kBAAkB;IAClCe,QAAQ,CAACQ,IAAI,CAACC,WAAW,CAACV,MAAM,CAAC;EACrC,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAO9B,OAAA;IAAKyC,EAAE,EAAC,KAAK;IAACC,KAAK,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAQ;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACtE,CAAC;AAAA9C,EAAA,CAxDKD,YAAY;AAAAgD,EAAA,GAAZhD,YAAY;AA0DlB,eAAeA,YAAY;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}