{"ast":null,"code":"var _jsxFileName = \"C:\\\\NRKIM_WORKSPACE\\\\THE_GYM\\\\frontend\\\\app\\\\src\\\\components\\\\MapComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapComponent = () => {\n  _s();\n  useEffect(() => {\n    let map = null;\n    const initMap = (lat, lng) => {\n      const {\n        naver\n      } = window;\n      if (!naver) return;\n      console.log(naver.maps);\n      console.log(naver.maps.Service);\n      map = new naver.maps.Map('map', {\n        //  center: new naver.maps.LatLng(37.5665, 126.9780), //  Í∞ïÏ†ú Í≥†Ï†ï\n        center: new naver.maps.LatLng(lat, lng),\n        // ÏÇ¨Ïö©ÏûêÏùò ÌòÑÏû¨ ÏúÑÏπò\n        zoom: 15\n      });\n\n      //  ÎßàÏª§ Ï∂îÍ∞Ä\n      new naver.maps.Marker({\n        //  position: new naver.maps.LatLng(37.5665, 126.9780),\n        position: new naver.maps.LatLng(lat, lng),\n        map,\n        title: \"ÎÇ¥ ÏúÑÏπò\"\n      });\n\n      // ÌòÑÏû¨ ÏúÑÏπò Í∏∞Î∞ò Í∑ºÏ≤ò Ìó¨Ïû• Í≤ÄÏÉâ\n      const placesService = naver.maps.Service.Places(); // ÎÑ§Ïù¥Î≤Ñ ÏßÄÎèÑ API ÏÑúÎπÑÏä§ Í∞ùÏ≤¥\n\n      console.log(placesService);\n      placesService.searchKeyword({\n        query: \"Ìó¨Ïä§Ïû•\",\n        coordinate: new naver.maps.LatLng(lat, lng),\n        radius: 2000,\n        page: 1,\n        size: 10\n      }, (status, response) => {\n        if (status === naver.maps.Service.Status.ERROR) {\n          console.error(\"ÎÑ§Ïù¥Î≤Ñ ÏßÄÎèÑ API Í≤ÄÏÉâ Ïò§Î•ò Î∞úÏÉù\");\n          return;\n        }\n        console.log(\"üîç Í≤ÄÏÉâÎêú Ìó¨Ïä§Ïû• Î™©Î°ù: \", response.places);\n        response.places.forEach(place => {\n          const marker = new naver.maps.Marker({\n            position: new naver.maps.LatLng(place.y, place.x),\n            map,\n            title: place.name\n          });\n          const infoWindow = new naver.maps.InfoWindow({\n            content: `<div style=\"padding:10px;\">${place.name}</div>`\n          });\n          naver.maps.Event.addListener(marker, \"click\", () => {\n            infoWindow.open(map, marker);\n          });\n        });\n      });\n    };\n    const getCurrentPosition = () => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          const userLat = position.coords.latitude;\n          const userLng = position.coords.longitude;\n          //alert(`‚úÖ ÏúÑÏπò Ï†ïÎ≥¥ Í∞ÄÏ†∏Ïò§Í∏∞ ÏÑ±Í≥µ: \\nÏúÑÎèÑ: ${userLat} \\nÍ≤ΩÎèÑ: ${userLng}`);\n          initMap(userLat, userLng); // Í∞ÄÏ†∏Ïò® ÏúÑÏπòÎ•º ÏßÄÎèÑ Ï¥àÍ∏∞Í∞íÏúºÎ°ú ÏÑ§Ï†ï\n        }, error => {\n          console.error(\"Geolocation Error: \", error);\n          //alert(`‚ùå Geolocation Error Î∞úÏÉù: \\nÏΩîÎìú: ${error.code} \\nÎ©îÏãúÏßÄ: ${error.message}`);\n          // Í∏∞Î≥∏ Ï¢åÌëú(ÏÑúÏö∏)Î°ú ÏßÄÎèÑ Î°úÎìú\n          initMap(37.5665, 126.9780);\n        }, {\n          enableHighAccuracy: true,\n          timeout: 10000,\n          maximumAge: 0\n        });\n      } else {\n        console.error(\"Geolocation is not supported by this browser.\");\n        initMap(37.5665, 126.9780); // Í∏∞Î≥∏ Ï¢åÌëú(ÏÑúÏö∏)Î°ú ÏßÄÎèÑ Î°úÎìú\n      }\n    };\n\n    // ÎÑ§Ïù¥Î≤Ñ ÏßÄÎèÑ Ïä§ÌÅ¨Î¶ΩÌä∏ Î°úÎìú\n    const script = document.createElement('script');\n    script.src = `https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=${process.env.REACT_APP_NAVER_MAP_CLIENT_ID}`;\n    script.async = true;\n    script.onload = getCurrentPosition;\n    document.head.appendChild(script);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      width: '100%',\n      height: '400px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 12\n  }, this);\n};\n_s(MapComponent, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","MapComponent","_s","map","initMap","lat","lng","naver","window","console","log","maps","Service","Map","center","LatLng","zoom","Marker","position","title","placesService","Places","searchKeyword","query","coordinate","radius","page","size","status","response","Status","ERROR","error","places","forEach","place","marker","y","x","name","infoWindow","InfoWindow","content","Event","addListener","open","getCurrentPosition","navigator","geolocation","userLat","coords","latitude","userLng","longitude","enableHighAccuracy","timeout","maximumAge","script","document","createElement","src","process","env","REACT_APP_NAVER_MAP_CLIENT_ID","async","onload","head","appendChild","id","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/NRKIM_WORKSPACE/THE_GYM/frontend/app/src/components/MapComponent.jsx"],"sourcesContent":["import React, {useEffect} from \"react\";\r\n\r\nconst MapComponent = () => {\r\n    useEffect(() => {\r\n        let map = null;\r\n\r\n        const initMap = (lat, lng) => {\r\n            const { naver } = window;\r\n            if (!naver) return;\r\n\r\n            console.log(naver.maps);\r\n            console.log(naver.maps.Service);\r\n\r\n            map = new naver.maps.Map('map', {\r\n                //  center: new naver.maps.LatLng(37.5665, 126.9780), //  Í∞ïÏ†ú Í≥†Ï†ï\r\n                center: new naver.maps.LatLng(lat, lng), // ÏÇ¨Ïö©ÏûêÏùò ÌòÑÏû¨ ÏúÑÏπò\r\n                zoom: 15,\r\n            });\r\n\r\n            //  ÎßàÏª§ Ï∂îÍ∞Ä\r\n            new naver.maps.Marker({\r\n                //  position: new naver.maps.LatLng(37.5665, 126.9780),\r\n                position: new naver.maps.LatLng(lat, lng),\r\n                map,\r\n                title: \"ÎÇ¥ ÏúÑÏπò\"\r\n            });\r\n\r\n            // ÌòÑÏû¨ ÏúÑÏπò Í∏∞Î∞ò Í∑ºÏ≤ò Ìó¨Ïû• Í≤ÄÏÉâ\r\n            const placesService = naver.maps.Service.Places();  // ÎÑ§Ïù¥Î≤Ñ ÏßÄÎèÑ API ÏÑúÎπÑÏä§ Í∞ùÏ≤¥\r\n\r\n            console.log(placesService);\r\n\r\n            placesService.searchKeyword({\r\n                query: \"Ìó¨Ïä§Ïû•\",\r\n                coordinate: new naver.maps.LatLng(lat, lng),\r\n                radius: 2000,\r\n                page: 1,\r\n                size: 10\r\n            }, (status, response) => {\r\n                if (status === naver.maps.Service.Status.ERROR) {\r\n                    console.error(\"ÎÑ§Ïù¥Î≤Ñ ÏßÄÎèÑ API Í≤ÄÏÉâ Ïò§Î•ò Î∞úÏÉù\");\r\n                    return;\r\n                }\r\n\r\n                console.log(\"üîç Í≤ÄÏÉâÎêú Ìó¨Ïä§Ïû• Î™©Î°ù: \", response.places);\r\n\r\n                response.places.forEach(place => {\r\n                    const marker = new naver.maps.Marker({\r\n                        position: new naver.maps.LatLng(place.y, place.x),\r\n                        map,\r\n                        title: place.name\r\n                    });\r\n\r\n                    const infoWindow = new naver.maps.InfoWindow({\r\n                        content: `<div style=\"padding:10px;\">${place.name}</div>`,\r\n                    });\r\n\r\n                    naver.maps.Event.addListener(marker, \"click\", () => {\r\n                        infoWindow.open(map, marker);\r\n                    });\r\n                });\r\n            });\r\n        };\r\n\r\n        const getCurrentPosition = () => {\r\n            if (navigator.geolocation) {\r\n                navigator.geolocation.getCurrentPosition(\r\n                    (position) => {\r\n                        const userLat = position.coords.latitude;\r\n                        const userLng = position.coords.longitude;\r\n                        //alert(`‚úÖ ÏúÑÏπò Ï†ïÎ≥¥ Í∞ÄÏ†∏Ïò§Í∏∞ ÏÑ±Í≥µ: \\nÏúÑÎèÑ: ${userLat} \\nÍ≤ΩÎèÑ: ${userLng}`);\r\n                        initMap(userLat, userLng); // Í∞ÄÏ†∏Ïò® ÏúÑÏπòÎ•º ÏßÄÎèÑ Ï¥àÍ∏∞Í∞íÏúºÎ°ú ÏÑ§Ï†ï\r\n                    },\r\n                    (error) => {\r\n                        console.error(\"Geolocation Error: \", error);\r\n                        //alert(`‚ùå Geolocation Error Î∞úÏÉù: \\nÏΩîÎìú: ${error.code} \\nÎ©îÏãúÏßÄ: ${error.message}`);\r\n                        // Í∏∞Î≥∏ Ï¢åÌëú(ÏÑúÏö∏)Î°ú ÏßÄÎèÑ Î°úÎìú\r\n                        initMap(37.5665, 126.9780);\r\n                    },{\r\n                        enableHighAccuracy: true,\r\n                        timeout: 10000,\r\n                        maximumAge: 0\r\n                    }\r\n                );\r\n            } else {\r\n                console.error(\"Geolocation is not supported by this browser.\");\r\n                initMap(37.5665, 126.9780); // Í∏∞Î≥∏ Ï¢åÌëú(ÏÑúÏö∏)Î°ú ÏßÄÎèÑ Î°úÎìú\r\n            }\r\n        };\r\n\r\n        // ÎÑ§Ïù¥Î≤Ñ ÏßÄÎèÑ Ïä§ÌÅ¨Î¶ΩÌä∏ Î°úÎìú\r\n        const script = document.createElement('script');\r\n        script.src = `https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=${process.env.REACT_APP_NAVER_MAP_CLIENT_ID}`;\r\n        script.async = true;\r\n        script.onload = getCurrentPosition;\r\n        document.head.appendChild(script);\r\n    }, []);\r\n\r\n    return <div id=\"map\" style={{ width: '100%', height: '400px' }} />;\r\n}\r\n\r\nexport default MapComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}