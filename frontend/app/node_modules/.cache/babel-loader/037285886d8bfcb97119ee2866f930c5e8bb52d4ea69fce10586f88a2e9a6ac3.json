{"ast":null,"code":"var _jsxFileName = \"C:\\\\NRKIM_WORKSPACE\\\\THE_GYM\\\\frontend\\\\app\\\\src\\\\components\\\\MapComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport PlaceListComponent from \"./PlaceListComponent\"; // 📌 헬스장 목록 컴포넌트 추가\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapComponent = () => {\n  _s();\n  const [map, setMap] = useState(null);\n  const [userLat, setUserLat] = useState(null);\n  const [userLng, setUserLng] = useState(null);\n  const [gyms, setGyms] = useState([]); // 📌 헬스장 목록 저장\n\n  useEffect(() => {\n    const initMap = (lat, lng) => {\n      if (!window.naver || !window.naver.maps) {\n        console.error(\"❌ 네이버 지도 API가 아직 로드되지 않았습니다.\");\n        return;\n      }\n      console.log(\"📍 지도 초기화: \", lat, lng);\n      const mapInstance = new window.naver.maps.Map('map', {\n        center: new window.naver.maps.LatLng(lat, lng),\n        zoom: 15\n      });\n\n      // 📌 내 위치 마커 추가\n      new window.naver.maps.Marker({\n        position: new window.naver.maps.LatLng(lat, lng),\n        map: mapInstance,\n        title: \"내 위치\",\n        icon: {\n          content: '<div style=\"color:red; font-weight:bold;\">📍</div>',\n          size: new window.naver.maps.Size(20, 20),\n          anchor: new window.naver.maps.Point(10, 10)\n        }\n      });\n      setMap(mapInstance);\n      setUserLat(lat);\n      setUserLng(lng);\n    };\n    const getCurrentPosition = () => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          const lat = position.coords.latitude;\n          const lng = position.coords.longitude;\n          console.log(\"📍 현재 위치: \", lat, lng);\n          initMap(lat, lng);\n        }, error => {\n          console.error(\"❌ Geolocation Error:\", error);\n          initMap(37.5665, 126.9780);\n        }, {\n          enableHighAccuracy: true,\n          timeout: 10000,\n          maximumAge: 0\n        });\n      } else {\n        console.error(\"❌ Geolocation을 지원하지 않는 브라우저입니다.\");\n        initMap(37.5665, 126.9780);\n      }\n    };\n\n    // ✅ 네이버 지도 스크립트 로드\n    const script = document.createElement('script');\n    script.src = `https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=${process.env.REACT_APP_NAVER_MAP_CLIENT_ID}`;\n    script.async = true;\n    script.onload = getCurrentPosition;\n    document.head.appendChild(script);\n  }, []);\n\n  // ✅ 헬스장 목록 가져오기 (userLat, userLng가 설정되면 실행)\n  useEffect(() => {\n    if (userLat && userLng) {\n      console.log(\"🔍 헬스장 검색 시작:\", userLat, userLng);\n      fetchGyms(userLat, userLng);\n    }\n  }, [userLat, userLng]);\n  const fetchGyms = async (lat, lng) => {\n    try {\n      console.log(\"🛠️ API 요청:\", lat, lng);\n      const response = await axios.get(\"http://localhost:8080/api/v1/places\", {\n        params: {\n          lat,\n          lng\n        }\n      });\n      console.log(\"✅ 검색된 헬스장 목록:\", response.data.items);\n      setGyms(response.data.items);\n    } catch (error) {\n      console.error(\"❌ API 호출 오류:\", error);\n    }\n  };\n\n  // ✅ 지도 위에 마커 추가\n  useEffect(() => {\n    if (!map || gyms.length === 0) return;\n    console.log(\"📌 지도에 마커 추가:\", gyms);\n    gyms.forEach(gym => {\n      new window.naver.maps.Marker({\n        position: new window.naver.maps.LatLng(gym.mapy, gym.mapx),\n        // 📌 위도/경도 순서 반대로 설정\n        map: map,\n        title: gym.title,\n        icon: {\n          content: `<div style=\"color:blue; font-weight:bold;\">🏋️‍♂️</div>`,\n          size: new window.naver.maps.Size(20, 20),\n          anchor: new window.naver.maps.Point(10, 10)\n        }\n      });\n    });\n  }, [map, gyms]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      style: {\n        width: '100%',\n        height: '500px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), gyms.length > 0 && /*#__PURE__*/_jsxDEV(PlaceListComponent, {\n      gyms: gyms\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n};\n_s(MapComponent, \"mAE7EDQVFUEZi/td1gxu9a3O2n4=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useState","axios","PlaceListComponent","jsxDEV","_jsxDEV","MapComponent","_s","map","setMap","userLat","setUserLat","userLng","setUserLng","gyms","setGyms","initMap","lat","lng","window","naver","maps","console","error","log","mapInstance","Map","center","LatLng","zoom","Marker","position","title","icon","content","size","Size","anchor","Point","getCurrentPosition","navigator","geolocation","coords","latitude","longitude","enableHighAccuracy","timeout","maximumAge","script","document","createElement","src","process","env","REACT_APP_NAVER_MAP_CLIENT_ID","async","onload","head","appendChild","fetchGyms","response","get","params","data","items","length","forEach","gym","mapy","mapx","children","id","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/NRKIM_WORKSPACE/THE_GYM/frontend/app/src/components/MapComponent.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport PlaceListComponent from \"./PlaceListComponent\"; // 📌 헬스장 목록 컴포넌트 추가\r\n\r\nconst MapComponent = () => {\r\n    const [map, setMap] = useState(null);\r\n    const [userLat, setUserLat] = useState(null);\r\n    const [userLng, setUserLng] = useState(null);\r\n    const [gyms, setGyms] = useState([]); // 📌 헬스장 목록 저장\r\n\r\n    useEffect(() => {\r\n        const initMap = (lat, lng) => {\r\n            if (!window.naver || !window.naver.maps) {\r\n                console.error(\"❌ 네이버 지도 API가 아직 로드되지 않았습니다.\");\r\n                return;\r\n            }\r\n\r\n            console.log(\"📍 지도 초기화: \", lat, lng);\r\n\r\n            const mapInstance = new window.naver.maps.Map('map', {\r\n                center: new window.naver.maps.LatLng(lat, lng),\r\n                zoom: 15,\r\n            });\r\n\r\n            // 📌 내 위치 마커 추가\r\n            new window.naver.maps.Marker({\r\n                position: new window.naver.maps.LatLng(lat, lng),\r\n                map: mapInstance,\r\n                title: \"내 위치\",\r\n                icon: {\r\n                    content: '<div style=\"color:red; font-weight:bold;\">📍</div>',\r\n                    size: new window.naver.maps.Size(20, 20),\r\n                    anchor: new window.naver.maps.Point(10, 10),\r\n                }\r\n            });\r\n\r\n            setMap(mapInstance);\r\n            setUserLat(lat);\r\n            setUserLng(lng);\r\n        };\r\n\r\n        const getCurrentPosition = () => {\r\n            if (navigator.geolocation) {\r\n                navigator.geolocation.getCurrentPosition(\r\n                    (position) => {\r\n                        const lat = position.coords.latitude;\r\n                        const lng = position.coords.longitude;\r\n                        console.log(\"📍 현재 위치: \", lat, lng);\r\n\r\n                        initMap(lat, lng);\r\n                    },\r\n                    (error) => {\r\n                        console.error(\"❌ Geolocation Error:\", error);\r\n                        initMap(37.5665, 126.9780);\r\n                    }, {\r\n                        enableHighAccuracy: true,\r\n                        timeout: 10000,\r\n                        maximumAge: 0\r\n                    }\r\n                );\r\n            } else {\r\n                console.error(\"❌ Geolocation을 지원하지 않는 브라우저입니다.\");\r\n                initMap(37.5665, 126.9780);\r\n            }\r\n        };\r\n\r\n        // ✅ 네이버 지도 스크립트 로드\r\n        const script = document.createElement('script');\r\n        script.src = `https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=${process.env.REACT_APP_NAVER_MAP_CLIENT_ID}`;\r\n        script.async = true;\r\n        script.onload = getCurrentPosition;\r\n        document.head.appendChild(script);\r\n    }, []);\r\n\r\n    // ✅ 헬스장 목록 가져오기 (userLat, userLng가 설정되면 실행)\r\n    useEffect(() => {\r\n        if (userLat && userLng) {\r\n            console.log(\"🔍 헬스장 검색 시작:\", userLat, userLng);\r\n            fetchGyms(userLat, userLng);\r\n        }\r\n    }, [userLat, userLng]);\r\n\r\n    const fetchGyms = async (lat, lng) => {\r\n        try {\r\n            console.log(\"🛠️ API 요청:\", lat, lng);\r\n            const response = await axios.get(\"http://localhost:8080/api/v1/places\", {\r\n                params: { lat, lng }\r\n            });\r\n\r\n            console.log(\"✅ 검색된 헬스장 목록:\", response.data.items);\r\n            setGyms(response.data.items);\r\n        } catch (error) {\r\n            console.error(\"❌ API 호출 오류:\", error);\r\n        }\r\n    };\r\n\r\n    // ✅ 지도 위에 마커 추가\r\n    useEffect(() => {\r\n        if (!map || gyms.length === 0) return;\r\n\r\n        console.log(\"📌 지도에 마커 추가:\", gyms);\r\n        gyms.forEach((gym) => {\r\n            new window.naver.maps.Marker({\r\n                position: new window.naver.maps.LatLng(gym.mapy, gym.mapx), // 📌 위도/경도 순서 반대로 설정\r\n                map: map,\r\n                title: gym.title,\r\n                icon: {\r\n                    content: `<div style=\"color:blue; font-weight:bold;\">🏋️‍♂️</div>`,\r\n                    size: new window.naver.maps.Size(20, 20),\r\n                    anchor: new window.naver.maps.Point(10, 10),\r\n                }\r\n            });\r\n        });\r\n    }, [map, gyms]);\r\n\r\n    return (\r\n        <div>\r\n            <div id=\"map\" style={{ width: '100%', height: '500px' }} />\r\n\r\n            {/* ✅ PlaceListComponent에 gyms(헬스장 목록) 전달 */}\r\n            {gyms.length > 0 && <PlaceListComponent gyms={gyms} />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MapComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,kBAAkB,MAAM,sBAAsB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEtCD,SAAS,CAAC,MAAM;IACZ,MAAMgB,OAAO,GAAGA,CAACC,GAAG,EAAEC,GAAG,KAAK;MAC1B,IAAI,CAACC,MAAM,CAACC,KAAK,IAAI,CAACD,MAAM,CAACC,KAAK,CAACC,IAAI,EAAE;QACrCC,OAAO,CAACC,KAAK,CAAC,8BAA8B,CAAC;QAC7C;MACJ;MAEAD,OAAO,CAACE,GAAG,CAAC,aAAa,EAAEP,GAAG,EAAEC,GAAG,CAAC;MAEpC,MAAMO,WAAW,GAAG,IAAIN,MAAM,CAACC,KAAK,CAACC,IAAI,CAACK,GAAG,CAAC,KAAK,EAAE;QACjDC,MAAM,EAAE,IAAIR,MAAM,CAACC,KAAK,CAACC,IAAI,CAACO,MAAM,CAACX,GAAG,EAAEC,GAAG,CAAC;QAC9CW,IAAI,EAAE;MACV,CAAC,CAAC;;MAEF;MACA,IAAIV,MAAM,CAACC,KAAK,CAACC,IAAI,CAACS,MAAM,CAAC;QACzBC,QAAQ,EAAE,IAAIZ,MAAM,CAACC,KAAK,CAACC,IAAI,CAACO,MAAM,CAACX,GAAG,EAAEC,GAAG,CAAC;QAChDV,GAAG,EAAEiB,WAAW;QAChBO,KAAK,EAAE,MAAM;QACbC,IAAI,EAAE;UACFC,OAAO,EAAE,oDAAoD;UAC7DC,IAAI,EAAE,IAAIhB,MAAM,CAACC,KAAK,CAACC,IAAI,CAACe,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC;UACxCC,MAAM,EAAE,IAAIlB,MAAM,CAACC,KAAK,CAACC,IAAI,CAACiB,KAAK,CAAC,EAAE,EAAE,EAAE;QAC9C;MACJ,CAAC,CAAC;MAEF7B,MAAM,CAACgB,WAAW,CAAC;MACnBd,UAAU,CAACM,GAAG,CAAC;MACfJ,UAAU,CAACK,GAAG,CAAC;IACnB,CAAC;IAED,MAAMqB,kBAAkB,GAAGA,CAAA,KAAM;MAC7B,IAAIC,SAAS,CAACC,WAAW,EAAE;QACvBD,SAAS,CAACC,WAAW,CAACF,kBAAkB,CACnCR,QAAQ,IAAK;UACV,MAAMd,GAAG,GAAGc,QAAQ,CAACW,MAAM,CAACC,QAAQ;UACpC,MAAMzB,GAAG,GAAGa,QAAQ,CAACW,MAAM,CAACE,SAAS;UACrCtB,OAAO,CAACE,GAAG,CAAC,YAAY,EAAEP,GAAG,EAAEC,GAAG,CAAC;UAEnCF,OAAO,CAACC,GAAG,EAAEC,GAAG,CAAC;QACrB,CAAC,EACAK,KAAK,IAAK;UACPD,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;UAC5CP,OAAO,CAAC,OAAO,EAAE,QAAQ,CAAC;QAC9B,CAAC,EAAE;UACC6B,kBAAkB,EAAE,IAAI;UACxBC,OAAO,EAAE,KAAK;UACdC,UAAU,EAAE;QAChB,CACJ,CAAC;MACL,CAAC,MAAM;QACHzB,OAAO,CAACC,KAAK,CAAC,iCAAiC,CAAC;QAChDP,OAAO,CAAC,OAAO,EAAE,QAAQ,CAAC;MAC9B;IACJ,CAAC;;IAED;IACA,MAAMgC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC/CF,MAAM,CAACG,GAAG,GAAG,gEAAgEC,OAAO,CAACC,GAAG,CAACC,6BAA6B,EAAE;IACxHN,MAAM,CAACO,KAAK,GAAG,IAAI;IACnBP,MAAM,CAACQ,MAAM,GAAGjB,kBAAkB;IAClCU,QAAQ,CAACQ,IAAI,CAACC,WAAW,CAACV,MAAM,CAAC;EACrC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAhD,SAAS,CAAC,MAAM;IACZ,IAAIU,OAAO,IAAIE,OAAO,EAAE;MACpBU,OAAO,CAACE,GAAG,CAAC,eAAe,EAAEd,OAAO,EAAEE,OAAO,CAAC;MAC9C+C,SAAS,CAACjD,OAAO,EAAEE,OAAO,CAAC;IAC/B;EACJ,CAAC,EAAE,CAACF,OAAO,EAAEE,OAAO,CAAC,CAAC;EAEtB,MAAM+C,SAAS,GAAG,MAAAA,CAAO1C,GAAG,EAAEC,GAAG,KAAK;IAClC,IAAI;MACAI,OAAO,CAACE,GAAG,CAAC,aAAa,EAAEP,GAAG,EAAEC,GAAG,CAAC;MACpC,MAAM0C,QAAQ,GAAG,MAAM1D,KAAK,CAAC2D,GAAG,CAAC,qCAAqC,EAAE;QACpEC,MAAM,EAAE;UAAE7C,GAAG;UAAEC;QAAI;MACvB,CAAC,CAAC;MAEFI,OAAO,CAACE,GAAG,CAAC,eAAe,EAAEoC,QAAQ,CAACG,IAAI,CAACC,KAAK,CAAC;MACjDjD,OAAO,CAAC6C,QAAQ,CAACG,IAAI,CAACC,KAAK,CAAC;IAChC,CAAC,CAAC,OAAOzC,KAAK,EAAE;MACZD,OAAO,CAACC,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACxC;EACJ,CAAC;;EAED;EACAvB,SAAS,CAAC,MAAM;IACZ,IAAI,CAACQ,GAAG,IAAIM,IAAI,CAACmD,MAAM,KAAK,CAAC,EAAE;IAE/B3C,OAAO,CAACE,GAAG,CAAC,eAAe,EAAEV,IAAI,CAAC;IAClCA,IAAI,CAACoD,OAAO,CAAEC,GAAG,IAAK;MAClB,IAAIhD,MAAM,CAACC,KAAK,CAACC,IAAI,CAACS,MAAM,CAAC;QACzBC,QAAQ,EAAE,IAAIZ,MAAM,CAACC,KAAK,CAACC,IAAI,CAACO,MAAM,CAACuC,GAAG,CAACC,IAAI,EAAED,GAAG,CAACE,IAAI,CAAC;QAAE;QAC5D7D,GAAG,EAAEA,GAAG;QACRwB,KAAK,EAAEmC,GAAG,CAACnC,KAAK;QAChBC,IAAI,EAAE;UACFC,OAAO,EAAE,yDAAyD;UAClEC,IAAI,EAAE,IAAIhB,MAAM,CAACC,KAAK,CAACC,IAAI,CAACe,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC;UACxCC,MAAM,EAAE,IAAIlB,MAAM,CAACC,KAAK,CAACC,IAAI,CAACiB,KAAK,CAAC,EAAE,EAAE,EAAE;QAC9C;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC,EAAE,CAAC9B,GAAG,EAAEM,IAAI,CAAC,CAAC;EAEf,oBACIT,OAAA;IAAAiE,QAAA,gBACIjE,OAAA;MAAKkE,EAAE,EAAC,KAAK;MAACC,KAAK,EAAE;QAAEC,KAAK,EAAE,MAAM;QAAEC,MAAM,EAAE;MAAQ;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAG1DhE,IAAI,CAACmD,MAAM,GAAG,CAAC,iBAAI5D,OAAA,CAACF,kBAAkB;MAACW,IAAI,EAAEA;IAAK;MAAA6D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrD,CAAC;AAEd,CAAC;AAACvE,EAAA,CAvHID,YAAY;AAAAyE,EAAA,GAAZzE,YAAY;AAyHlB,eAAeA,YAAY;AAAC,IAAAyE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}